{"version":3,"sources":["components/Search.js","components/Header.js","components/Sidemenu/SidebarData.js","components/Sidemenu/DatePicker.js","components/Sidemenu/Filters.js","components/Sidemenu/SubMenu.js","components/Sidemenu/Sidebar.js","components/Navbar.js","components/Pages/About.js","firebase.js","components/Pages/charts.component.js","services/data.service.js","components/Pages/data.component.js","components/Pages/data-list.component.js","App.js","reportWebVitals.js","index.js"],"names":["Search","panTo","usePlacesAutocomplete","requestoptions","location","lat","lng","radius","ready","value","suggestions","status","data","setValue","clearSuggestions","className","onSelect","address","a","getGeocode","results","getLatLng","console","log","onChange","e","target","disabled","placeholder","map","id","description","Header","SidebarData","title1","icon1","title2","icon2","DatePicker","props","state","startDate","endDate","this","startDateId","endDateId","onDatesChange","setState","focusedInput","onFocusChange","orientation","verticalHeight","block","isOutsideRange","daySize","showClearDates","minimumNights","reopenPickerOnClearDates","Component","options","label","Filters","selectedOption","handleChange","isMulti","closeMenuOnSelect","SidebarLink","styled","Link","SidebarLabel","span","SubMenu","item","useState","subnav","setSubnav","showSubnav","to","onClick","subNav","NavIcon","SidebarNav","nav","sidebar","SidebarWrap","button","primary","div","Sidebar","setSidebar","showSidebar","Provider","color","index","Navbar","About","Container","Row","Col","style","margin","marginBottom","db","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","EACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","measurementId","database","ReactFC","fcRoot","FusionCharts","Column2D","FusionTheme","chartData","dateData","datas","chartConfigs","type","dataFormat","width","height","dataSource","chart","caption","xAxisName","yAxisName","theme","dateConfigs","Charts","refreshList","bind","setActiveData","onDataChange","count","refreshId","setInterval","ref","on","clearInterval","snapshot","todos","val","push","key","ObjectId","Beat","Disposition","Event_Date","Event_Number","General_Location","LAT","LONG","Type","Type_Description","WARD","length","filter","actualDate","split","currentData","currentIndex","content","child","update","remove","Data","onChangeBeat","onChangeEventNumber","updateEventDate","updateData","closeModal","message","visible","prevState","title","DataDataService","then","catch","Modal","show","backdrop","keyboard","closeButton","Title","Body","Footer","nextProps","markers","DataList","Map_X","Map_Y","New_Y","libraries","mapContainerStyle","center","disableDefaultUI","zoomControl","limitToFirst","App","useLoadScript","googleMapsApiKey","isLoaded","loadError","mapRef","React","useRef","onMapload","useCallback","current","setZoom","setMarkers","useEffect","selected","setSelected","exact","path","zoom","onLoad","marker","position","parseFloat","clickable","onCloseClick","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1dc9af6b.chunk.js","sourcesContent":["//Dependancies needed for the Search component\r\nimport usePlacesAutocomplete, {\r\n    getGeocode,\r\n    getLatLng,\r\n  } from \"use-places-autocomplete\"\r\nimport {\r\n    Combobox,\r\n    ComboboxInput,\r\n    ComboboxPopover,\r\n    ComboboxList,\r\n    ComboboxOption,\r\n  } from \"@reach/combobox\"\r\n  import \"@reach/combobox/styles.css\"\r\n\r\n//The component is started off as a hook function which is a new method to \r\n//declare a function, the panTo variable is passed in from the App.js file.  \r\nconst Search = ({panTo}) => {\r\n    \r\n  //These are variables that will be used later on in the component.\r\n    const {\r\n      ready, \r\n      value, \r\n      suggestions: {status, data}, \r\n      setValue, \r\n      clearSuggestions,\r\n    } = usePlacesAutocomplete({\r\n\r\n      requestoptions:{\r\n        location: { lat: () => 39.529633, lng: () => -119.813805 },\r\n        radius: 100*1000,\r\n      },\r\n    });\r\n  \r\n  \r\n    return( \r\n      //the className 'search' can be found in the app.css file in order to change the \r\n      //position and shape of the search box\r\n      <div className=\"search\">\r\n      <Combobox \r\n         onSelect={async (address) => {\r\n           setValue(address, false);\r\n           clearSuggestions();\r\n  \r\n           try{\r\n              const results = await getGeocode({address});\r\n              const { lat, lng } = await getLatLng(results[0]);           \r\n              panTo({lat,lng});\r\n           } catch(error){\r\n             console.log(\"error!\")\r\n           }\r\n        \r\n  \r\n           console.log(address)\r\n           }}\r\n      >\r\n        <ComboboxInput \r\n          value = {value}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n          }}\r\n          disabled={!ready}\r\n          placeholder=\"Enter a city\"\r\n           />\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {status === \"OK\" && data.map(({id, description}) =>(\r\n              <ComboboxOption key={id} value={description} />\r\n            ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Search\r\n","//A small file simply used for the title of the website\r\nconst Header = () => {\r\n    return (\r\n    \r\n        <header className='header'>\r\n            <h1>Crime Rate Mapping</h1>\r\n        </header>\r\n       \r\n    )    \r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\n\r\n//use and import icons from react-icon (https://react-icons.github.io/react-icons)\r\nimport * as MDIcons from \"react-icons/md\";\r\nimport * as IO5Icons from \"react-icons/io5\";\r\n\r\n//export the titles and icons for \"filter\" and \"datepicker\" components in the sidebar to Sidebar.js\r\nexport const SidebarData = [\r\n  {\r\n    title1: \"Filters\",\r\n    icon1: <IO5Icons.IoFilterSharp />,\r\n\r\n    title2: \"Date\",\r\n    icon2: <MDIcons.MdDateRange />,\r\n  },\r\n];\r\n","//import component from react and Airbnb datapicker API\nimport React, { Component } from \"react\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"react-dates/initialize\";\nimport { DateRangePicker } from \"react-dates\";\n\n//initiate a class component called DatePicker that has props(properties)of startDate and endDate\nclass DatePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: null,\n      endDate: null,\n    };\n  }\n\n  //render and return the DateRangePicker\n  render() {\n    return (\n      <div>\n        <DateRangePicker\n          startDate={this.state.startDate} // momentPropTypes.momentObj or null,\n          startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n          endDate={this.state.endDate} // momentPropTypes.momentObj or null,\n          endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n          onDatesChange={({ startDate, endDate }) =>\n            this.setState({ startDate, endDate })\n          } // PropTypes.func.isRequired,\n          focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n          onFocusChange={(focusedInput) => this.setState({ focusedInput })} // PropTypes.func.isRequired,\n          //add options\n\n          //change the orientation of datepicker to veritcal\n          orientation=\"vertical\"\n          //adjust the heigh\n          verticalHeight={450}\n          block\n          //allow user to pick past days\n          isOutsideRange={() => false}\n          daySize={60}\n          showClearDates\n          //allow user to pick just one day instead of a date range\n          minimumNights={0}\n          reopenPickerOnClearDates\n        />\n      </div>\n    );\n  }\n}\n//export as DatePicker to SubMenu.js\nexport default DatePicker;\n","//import component and dropdown menu from react-select\nimport { Component } from \"react\";\nimport Select from \"react-select\";\n\n//a list of types of crime for users to choose from the filter\nconst options = [\n  { label: \"Arson\", value: \"arson\" },\n  { label: \"Assault\", value: \"assault\" },\n  { label: \"Burglary\", value: \"burglary\" },\n  { label: \"Drug Violation\", value: \"drug_violation\" },\n  { label: \"DUI\", value: \"dui\" },\n  { label: \"Homicide\", value: \"homicide\" },\n  { label: \"Robbery\", value: \"robbery\" },\n  { label: \"Sex Crimes\", value: \"sex_crimes\" },\n  { label: \"Shoplifting\", value: \"shoplifting\" },\n  { label: \"Theft\", value: \"theft\" },\n  { label: \"Traffic Incident\", value: \"traffic_incident\" },\n  { label: \"Vandalism\", value: \"vandalism\" },\n  { label: \"Weapons\", value: \"weapons\" },\n];\n\n//initiate a class component called Filters that has props(properties)of selectedOption and a state to store the selected options\nclass Filters extends Component {\n  state = {\n    //all options are preselected\n    selectedOption: options,\n  };\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n\n    //printing out the options selected\n    console.log(`Option selected:`, selectedOption);\n  };\n\n  //render and return the DateRangePicker\n  render() {\n    //update the state according to the selectedOption\n    const { selectedOption } = this.state;\n\n    //return a dropdown menu\n    return (\n      <Select\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n        //allow users to pick multiple types of crime from the menu\n        isMulti\n        closeMenuOnSelect={false}\n      />\n    );\n  }\n}\n//export as Filters to SubMenu.js\nexport default Filters;\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport Filters from \"./Filters\";\r\n\r\nconst SidebarLink = styled(Link)`\r\n  display: flex;\r\n  color: #e1e9fc;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  list-style: none;\r\n  height: 60px;\r\n  text-decoration: none;\r\n  font-size: 20px;\r\n  &:hover {\r\n    background: #252831;\r\n    border-left: 4px solid #632ce4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SidebarLabel = styled.span`\r\n  margin-left: 16px;\r\n`;\r\n\r\n//a function to show and hide the the sidebar by click the button at upper left conrner\r\nconst SubMenu = ({ item }) => {\r\n  const [subnav, setSubnav] = useState(false);\r\n\r\n  const showSubnav = () => setSubnav(!subnav);\r\n\r\n  return (\r\n    <>\r\n      //display the titles and icons for filter and datapicker\r\n      <SidebarLink to={item} onClick={item.subNav && showSubnav}>\r\n        <div>\r\n          {item.icon1}\r\n          <SidebarLabel>{item.title1}</SidebarLabel>\r\n        </div>\r\n      </SidebarLink>\r\n      //add the Filters from Filters.js\r\n      <Filters />\r\n      <SidebarLink to={item} onClick={item.subNav && showSubnav}>\r\n        <div>\r\n          {item.icon2}\r\n          <SidebarLabel>{item.title2}</SidebarLabel>\r\n        </div>\r\n      </SidebarLink>\r\n      //add the datepicker from DatePicker.js\r\n      <DatePicker />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubMenu;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\n//These variables are a mix of css and javascript that act like a component\r\n//and are called within the render/return part of a function. They will\r\n//wrap the variables and components within it with the styles it has.\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #15171c;\r\n  opacity: 0.9;\r\n  width: 350px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  /* Adapt the colors based on primary prop */\r\n  background: ${(props) => (props.primary ? \"#0096FA\" : \"#15171c\")};\r\n  color: ${(props) => (props.primary ? \"white\" : \"white\")};\r\n  font-size: 1em;\r\n  margin: 2em;\r\n  margin-left: 4em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #0096fa;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  //A boolean variable which is used to show or hide the sidebar component\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  //A hook that uses the 'sidebar' variable to either show or hide the\r\n  //sidebar component depending on the value it has.\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      {/**This next line of code assigns a color to the button that\r\n       * open and closes the sidebar\r\n       */}\r\n      <IconContext.Provider value={{ color: \"#0096FA\" }}>\r\n        <NavIcon to=\"#\">\r\n          <FaIcons.FaBars onClick={showSidebar} />\r\n        </NavIcon>\r\n        {/** The SidebarNav and SidebarWrap which were declared above are called\r\n         * to wrap the SubMenu component.\r\n         */}\r\n        <SidebarNav sidebar={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to=\"#\">\r\n              <FaIcons.FaOutdent onClick={showSidebar} />\r\n            </NavIcon>\r\n            {SidebarData.map((item, index) => {\r\n              return <SubMenu item={item} key={index} />;\r\n            })}\r\n            {/*  <Button type=\"submit\">Apply</Button> */}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Navbar.css'\r\nimport Header from './Header'\r\nimport Sidebar from './Sidemenu/Sidebar'\r\n \r\n//Here the navbar is implemented which isa component that appears\r\n//in every page of the website.\r\nfunction Navbar() {\r\n\r\n  return (\r\n    <>\r\n      <nav className='navbar'>\r\n        {/**The Sidebar and Header components appear in each page of the website */}\r\n       <Sidebar/>\r\n       <Header />\r\n\r\n        <ul className='nav-menu'>\r\n            {/**The Link component helps switch between pages without the need\r\n             * of constantly reloading the page, makes the website 'flicker' when \r\n             * changing between pages if not used.\r\n             * Styling comes from the NavBar.css file.\r\n             */}\r\n            <Link to=\"/\" className='nav-links' >\r\n             <li className='nav-item'>Home</li>\r\n            </Link>\r\n         \r\n            <Link to=\"/About\" className='nav-links'>\r\n               <li className='nav-item'>About</li>\r\n            </Link>\r\n          \r\n            <Link to=\"/Charts\" className='nav-links'>\r\n               <li className='nav-item'>Charts</li>\r\n            </Link>\r\n\r\n            <Link to=\"/Data\" className='nav-links'>\r\n               <li className='nav-item'>Data</li>\r\n            </Link>\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../../App.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { IoGrid } from \"react-icons/io5\";\r\nimport { FaCentercode } from \"react-icons/fa\";\r\n\r\n//constructing an about page here\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              margin: \"80px\",\r\n            }}\r\n          >\r\n            //list of team members\r\n            <h2\r\n              style={{\r\n                marginBottom: \"40px\",\r\n              }}\r\n            >\r\n              Team 31\r\n            </h2>\r\n            <ul>Befiker Beksisa</ul>\r\n            <ul>Ivan Samuel</ul>\r\n            <ul>Steven Hernandez</ul>\r\n            <ul>WaKit Lam</ul>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              margin: \"80px\",\r\n            }}\r\n          >\r\n            //list of instructors and advisor\r\n            <h2\r\n              style={{\r\n                marginBottom: \"80px\",\r\n              }}\r\n            >\r\n              Instructors & Advisor\r\n            </h2>\r\n            <ul>Dr. David Feil-Seifer</ul>\r\n            <ul>Dr. Devrin Lee</ul>\r\n            <ul>Dr. Lei Yang</ul>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              margin: \"80px\",\r\n            }}\r\n          >\r\n            //a brief project description\r\n            <h2>Project Desciption</h2>\r\n            <p\r\n              style={{\r\n                margin: \"80px\",\r\n              }}\r\n            >\r\n              Avoiding areas that may have a higher possibility of a crime is\r\n              one of the many concerns a person has when going to a new place.\r\n              While word of mouth of what areas to avoid or actions not to do\r\n              can give one a peace of mind, it is really not the same when\r\n              comparing it to having actual data that can help the person decide\r\n              if it is safe to go or not. Hence, the goal is a web application\r\n              that will give the users the chance to look at a certain city to\r\n              check the type of crimes that happen within. The website will show\r\n              the type of crimes, when it happened and where it happened on a\r\n              map. Along with various other filters to help the user get a\r\n              better picture of the crime. This is intended to help those who\r\n              are planning to visit a new city they have never been before,\r\n              people looking at an area’s safety for a potential home, or even\r\n              help the local emergency service. The website will use information\r\n              from the local or metropolitan police station to get the most\r\n              recent data and keep users informed with the latest reports. The\r\n              project is currently being worked on and is planned to be up and\r\n              running around April of 2021.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import firebase from \"firebase\";\nimport \"firebase/database\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN_KEY,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.EACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n});\n\nconst db = firebaseApp.database();\nexport default db;\n","import React, { Component } from \"react\";\r\nimport firebase from \"../../firebase\";\r\n// Step 2 - Include the react-fusioncharts component\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\n// Step 3 - Include the fusioncharts library\r\nimport FusionCharts from \"fusioncharts\";\r\n\r\n// Step 4 - Include the chart type\r\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\r\n\r\n// Step 5 - Include the theme as fusion\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\n// Step 6 - Adding the chart and theme as dependency to the core fusioncharts\r\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\r\n\r\nlet chartData = [];\r\nlet dateData = [];\r\nlet datas = [];\r\n\r\nconst chartConfigs = {\r\n  type: \"column2d\", // The chart type\r\n  dataFormat: \"json\", // Data type\r\n  width: \"1100\", // Width of the chart\r\n  height: \"700\",\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"Crime types and occurrence\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Date\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Crime\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\",\r\n    },\r\n    // Chart Data\r\n    data: chartData,\r\n  },\r\n};\r\n\r\nconst dateConfigs = {\r\n  type: \"column2d\", // The chart type\r\n  dataFormat: \"json\", // Data type\r\n  width: \"1100\", // Width of the chart\r\n  height: \"700\",\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"Crime rate per day\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Date\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Rate\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\",\r\n    },\r\n    // Chart Data\r\n    data: dateData,\r\n  },\r\n};\r\n\r\nexport default class Charts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveData = this.setActiveData.bind(this);\r\n    this.onDataChange = this.onDataChange.bind(this);\r\n\r\n    this.state = {\r\n      datas: [],\r\n      chartData: [],\r\n      dateData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var count = 99099;\r\n\r\n    var refreshId = setInterval(() => {\r\n      const db = firebase.ref(`/${count}`);\r\n      db.on(\"value\", this.onDataChange);\r\n      count++;\r\n      if (count > 99300) {\r\n        clearInterval(refreshId);\r\n      }\r\n    }, 40);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // DataDataService.getAll().off(\"value\", this.onDataChange);\r\n  }\r\n\r\n  onDataChange(snapshot) {\r\n    const todos = snapshot.val();\r\n\r\n    datas.push({\r\n      key: todos.ObjectId,\r\n      Beat: todos.Beat,\r\n      Disposition: todos.Disposition,\r\n      Event_Date: todos.Event_Date,\r\n      Event_Number: todos.Event_Number,\r\n      General_Location: todos.General_Location,\r\n      LAT: todos.LAT,\r\n      LONG: todos.LONG,\r\n      Type: todos.Type,\r\n      Type_Description: todos.Type_Description,\r\n      WARD: todos.WARD,\r\n    });\r\n\r\n    if (chartData.length < 1) {\r\n      chartData.push({ label: todos.Type_Description, value: 1 });\r\n    } else if (\r\n      chartData.filter((data) => data.label === todos.Type_Description).length >\r\n      0\r\n    ) {\r\n      chartData.filter((data) => {\r\n        if (data.label === todos.Type_Description) {\r\n          data.value = data.value + 1;\r\n        }\r\n        return data;\r\n      });\r\n    } else {\r\n      chartData.push({ label: todos.Type_Description, value: 1 });\r\n    }\r\n\r\n    var actualDate = todos.Event_Date.split(\":\")[0];\r\n\r\n    if (dateData.length < 1) {\r\n      dateData.push({ label: actualDate, value: 1 });\r\n    } else if (\r\n      dateData.filter((data) => data.label === actualDate).length > 0\r\n    ) {\r\n      dateData.filter((data) => {\r\n        if (data.label === actualDate) {\r\n          data.value = data.value + 1;\r\n        }\r\n\r\n        return data;\r\n      });\r\n    } else {\r\n      dateData.push({ label: actualDate, value: 1 });\r\n    }\r\n\r\n    this.setState({\r\n      datas: datas,\r\n      chartData: chartData,\r\n      dateData: dateData,\r\n    });\r\n  }\r\n\r\n  refreshList() {\r\n    this.setState({\r\n      currentData: null,\r\n      currentIndex: -1,\r\n    });\r\n  }\r\n\r\n  setActiveData(data, index) {\r\n    this.setState({\r\n      currentData: data,\r\n      currentIndex: index,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { datas } = this.state;\r\n\r\n    let content;\r\n    if (datas.length > 99) {\r\n      content = (\r\n        <div className=\"container text-denter\">\r\n          <ReactFC {...chartConfigs} />\r\n          <hr />\r\n          <ReactFC {...dateConfigs} />\r\n        </div>\r\n      );\r\n    } else {\r\n      content = <span>Loading map...</span>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"datamap\">{content}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import firebase from \"../firebase\";\r\n\r\nconst db = firebase.ref(\"/99099\");\r\n\r\nclass DataDataService {\r\n  getAll() {\r\n    return db;\r\n  }\r\n\r\n  create(data) {\r\n    return db.push(data);\r\n  }\r\n\r\n  update(key, value) {\r\n    return db.child(key).update(value);\r\n  }\r\n\r\n  delete(key) {\r\n    return db.child(key).remove();\r\n  }\r\n\r\n  deleteAll() {\r\n    return db.remove();\r\n  }\r\n}\r\n\r\nexport default new DataDataService();\r\n","import React, { Component } from \"react\";\r\nimport DataDataService from \"../../services/data.service\";\r\nimport { Modal } from 'react-bootstrap';\r\n\r\n\r\nexport default class Data extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeBeat = this.onChangeBeat.bind(this);\r\n    this.onChangeEventNumber = this.onChangeEventNumber.bind(this);\r\n    this.updateEventDate = this.updateEventDate.bind(this);\r\n    this.updateData = this.updateData.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n\r\n    this.state = {\r\n      currentData: {\r\n        key: null,\r\n        Beat: \"\",\r\n        Disposition: \"\",\r\n        Event_Date: \"\",\r\n        Event_Number: \"\",\r\n        General_Location: \"\",\r\n        LAT: \"\",\r\n        LONG: \"\",\r\n        Type: \"\",\r\n        Type_Description: \"\",\r\n        WARD: 0\r\n      },\r\n      message: \"\",\r\n      visible: true\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const { data } = nextProps;\r\n    if (prevState.currentData.key !== data.key) {\r\n      return {\r\n        currentData: data,\r\n        message: \"\",\r\n        visible: true\r\n      };\r\n    }\r\n\r\n    return prevState.currentData;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      currentData: this.props.data,\r\n      visible: true\r\n    });\r\n  }\r\n\r\n  closeModal(){\r\n    this.setState(function (prevState) {\r\n      return {\r\n        visible: false\r\n      };\r\n    });\r\n\r\n  }\r\n\r\n  onChangeBeat(e) {\r\n    const title = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentData: {\r\n          ...prevState.currentData,\r\n          Beat: title,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeEventNumber(e) {\r\n    const description = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentData: {\r\n        ...prevState.currentData,\r\n        Event_Number: description,\r\n      },\r\n    }));\r\n  }\r\n\r\n  updateEventDate(status) {\r\n    DataDataService.update(this.state.currentData.key, {\r\n      Event_Date: status,\r\n    })\r\n      .then(() => {\r\n        this.setState((prevState) => ({\r\n          currentData: {\r\n            ...prevState.currentData,\r\n            Event_Date: status,\r\n          },\r\n          message: \"The status was updated successfully!\",\r\n        }));\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateData() {\r\n    const data = {\r\n      Beat: this.state.currentData.Beat,\r\n      Event_Number: this.state.currentData.Event_Number,\r\n    };\r\n\r\n    DataDataService.update(this.state.currentData.key, data)\r\n      .then(() => {\r\n        this.setState({\r\n          message: \"The data was updated successfully!\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentData, visible } = this.state;\r\n\r\n\r\n    return (\r\n\r\n      <div>\r\n\r\n        {currentData ? (\r\n          // onChange={this.onChangeBeat}\r\n          <Modal show={visible} backdrop=\"static\" keyboard={true} onClick={() => this.closeModal()}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                Crime Info\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>{currentData.Type_Description}</p>\r\n              <p><em>{currentData.Event_Number}</em></p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <p><em>{currentData.Event_Date}</em></p><br/>\r\n              <p><em>{currentData.General_Location}</em></p>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Data...</p>\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"../../firebase\";\r\n\r\nimport Data from \"./data.component\";\r\n\r\n\r\nconst datas = [];\r\nconst markers = [];\r\n\r\nexport default class DataList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveData = this.setActiveData.bind(this);\r\n    this.onDataChange = this.onDataChange.bind(this);\r\n\r\n    this.state = {\r\n      datas: [],\r\n      markers: [],\r\n      currentData: null,\r\n      currentIndex: -1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var count = 99099;\r\n\r\n    var refreshId = setInterval(() => {\r\n      const db = firebase.ref(`/${count}`);\r\n      db.on(\"value\", this.onDataChange);\r\n      count++;\r\n      if (count > 99300) {\r\n        clearInterval(refreshId);\r\n      }\r\n    }, 40);\r\n\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // DataDataService.getAll().off(\"value\", this.onDataChange);\r\n  }\r\n\r\n  onDataChange(snapshot) {\r\n\r\n    const todos = snapshot.val();\r\n\r\n    datas.push({\r\n      key: todos.ObjectId,\r\n      Beat: todos.Beat,\r\n      Disposition: todos.Disposition,\r\n      Event_Date: todos.Event_Date,\r\n      Event_Number: todos.Event_Number,\r\n      General_Location: todos.General_Location,\r\n      LAT: todos.LAT,\r\n      LONG: todos.LONG,\r\n      Map_X: todos.Map_X,\r\n      Map_Y: todos.Map_Y,\r\n      New_Y: todos.New_Y,\r\n      ObjectId: todos.ObjectId,\r\n      Type: todos.Type,\r\n      Type_Description: todos.Type_Description,\r\n      WARD: todos.WARD\r\n    });\r\n\r\n    markers.push([todos.LAT, todos.LONG]);\r\n\r\n    this.setState({\r\n      datas: datas,\r\n      markers: markers\r\n    });\r\n  }\r\n\r\n  refreshList() {\r\n    this.setState({\r\n      currentData: null,\r\n      currentIndex: -1,\r\n    });\r\n  }\r\n\r\n  setActiveData(data, index) {\r\n    this.setState({\r\n      currentData: data,\r\n      currentIndex: index,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { datas, currentData, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"container\">\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Beat </th>\r\n                  <th>Disposition</th>\r\n                  <th>Event_Date</th>\r\n                  <th>Event_Number</th>\r\n                  <th>General_Location</th>\r\n                  <th>LAT</th>\r\n                  <th>LONG</th>\r\n                  <th>Type </th>\r\n                  <th>Type_Description</th>\r\n                  <th>WARD </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {datas &&\r\n                  datas.map((data, index) => (\r\n                    <tr className={\r\n                      \"item \" +\r\n                      (index === currentIndex ? \"active\" : \"\")\r\n                    }\r\n                      onClick={() => this.setActiveData(data, index)}\r\n                      key={index}>\r\n                      <td>{data.Beat}</td>\r\n                      <td>{data.Disposition}</td>\r\n                      <td>{data.Event_Date}</td>\r\n                      <td>{data.Event_Number}</td>\r\n                      <td>{data.General_Location}</td>\r\n                      <td>{data.LAT}</td>\r\n                      <td>{data.LONG}</td>\r\n                      <td>{data.Type}</td>\r\n                      <td>{data.Type_Description}</td>\r\n                      <td>{data.WARD}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentData ? (\r\n            <Data\r\n              data={currentData}\r\n              refreshList={this.refreshList}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Data...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport Search from './components/Search'\nimport './App.css'\nimport Navbar from './components/Navbar'\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport About from './components/Pages/About'\nimport Charts from \"./components/Pages/charts.component\"\nimport DataList from \"./components/Pages/data-list.component\";\nimport firebase from \"./firebase\"\n\n//Dependancies for the google maps \nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\"              \n\nconst libraries =  [\"places\"];\n\n//This is how big we want the map to be on the website\nconst mapContainerStyle = {\n  width: \"100vw\",\n  height: \"91vh\",\n};\n\n//Where to center at the start of the program (these coordinates are on Reno)\nconst center = {\n  lat: 39.529633,\n  lng: -119.813805,\n};\n\n//Default stuff\nconst options={\n   disableDefaultUI: true,\n   zoomControl: true,\n};\n\n\n//Firebase gets called here and the \"limitToFirst\" function pulls the first 'n' number of elements\nconst db = firebase.ref().limitToFirst(1000);\n\n\n// THIS IS THE MAIN APPLICAITON FUNCTION \nconst App = () =>{\n\n   //This loads the google API key which is stored in the .env.local file\n   //The key is made by making a google maps api and choosing the necessary functions\n   //for it.\n   const {isLoaded, loadError} = useLoadScript({                 \n     googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n     libraries,\n   })\n\n //These variables will be used for the google maps\n const mapRef = React.useRef();\n const onMapload = React.useCallback((map) => {\n  mapRef.current = map;\n }, []);\n\n  //This part of the code helps transition to the coordinates given on the map\n const panTo = React.useCallback(({lat, lng}) => {\n  mapRef.current.panTo({lat, lng});\n  mapRef.current.setZoom(13);\n }, []);\n\n //This useState array is used to store the data from the firebase realtime database\n const [markers, setMarkers] =useState([]); \n\n //This useEffect function helps cut out two functions that are usually used \n //to check if a certain variable or component has been updated.\n //In this case, the useEffect get triggered whenever it detects that the \n //markers array had a change\n  useEffect(() => {\n    db.on(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      setMarkers(data);    \n    }); \n  },[])\n\n  //The following line has been commented out, but it was used to check if the data was succesfully passed\n  //and can be seen on the console\n  //  console.log(markers)\n\n  //This variable is used for the infoWindow \n const [selected, setSelected] = useState({});\n const onSelect = item => {\n   setSelected(item);\n }\n\n  //These next two lines just throw a message if the maps either didn't load or is in the\n  //process of loading\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Maps\";\n\n  //This following section of the code calls in the components that were made to render them out to\n  //the website.\n  return( \n   //Router,Switch and Route are components from the react-router-dom library that help\n   // switch between pages\n   <Router>  \n     <div>\n      {/*The Navbar component is excluded from the Switch block since it is a component that\n         will be shown in every page and used to guide through it. */}\n      <Navbar />   \n        <Switch>\n            {/** The first Route wraps the Search,GoogleMap, Marker and the InfoWindow components\n             * so they only pop up in the home page of the website.\n             */}\n            <Route exact path=\"/\" >\n              <Search panTo={panTo}/>             \n              <GoogleMap \n                  mapContainerStyle={mapContainerStyle}  \n                  zoom={13}\n                  center={center}  \n                  options={options}\n                  onLoad={onMapload}\n                  \n                >\n                  {/**Below, the marker useState array that was made earlier to hold the data from the \n                   * firebase request gets looped with the map() function and the coordinates\n                   * from each element of the array gets extracted and converted to a float data type\n                   * since they are in a string datatype variable. The InfoWindow component\n                   * gives off a small block that displays the crime type and general location.\n                   */}\n                  {markers.map(marker => {\n                    return(\n                      <Marker key={marker.ObjectId} \n                      position={{lat:parseFloat(marker.LAT), lng:parseFloat(marker.LONG)}}\n                      onClick={() => onSelect(marker)}\n                      />\n                    )\n                  })}\n                  {selected.markers && (\n                    <InfoWindow\n                    position={selected.markers}\n                    clickable={true}\n                    onCloseClick={() => setSelected({})}\n                    >\n                      <p>{markers.Type_Description }{markers.General_Location}</p>\n                      \n                    </InfoWindow>\n                  )}     \n                </GoogleMap>   \n            </Route>\n            \n            {/**These next three Routes will help switch to the About, Charts and DataList components */}\n            <Route exact path=\"/About\" component={About}/>\n            <Route exact path=\"/Charts\" component={Charts}/>\n            <Route exact path=\"/Data\" component={DataList}/>\n                \n            </Switch>\n          </div> \n   </Router>\n  \n  );\n}\n\nexport default App\n\n\n                    \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}